#!/bin/bash

if ! type grc >/dev/null; then
  echo 'blesh check: grc not found. grc can be found in github.com:akinomyoga/mshex.git/' >&2
  exit
fi

function check-builtin {
  echo "--- $FUNCNAME ---"
  local command="$1" esc='(\[[ -?]*[@-~])*'
  grc --color --exclude=./test "(^|[^-./\${}])\b$command"'\b([[:space:]|&;<>()`"'\'']|$)' |
    grep -Ev "^$esc([^[:space:]]$esc)+[[:space:]]*#|(\b|$esc)builtin$esc([[:space:]]$esc)+$command(\b|$esc)" |
    grep -Ev "$command(\b|$esc)="
}

function check-bash300bug {
  echo "--- $FUNCNAME ---"
  # bash-3.0 では local arr=(1 2 3) とすると
  # local arr='(1 2 3)' と解釈されてしまう。
  grc 'local [a-zA-Z_]+=\(' --exclude=test

  # bash-3.0 では local -a arr=("$hello") とすると
  # クォートしているにも拘らず $hello の中身が単語分割されてしまう。
  grc 'local -a [[:alnum:]_]+=\([^)]*[\"'\''`]' --exclude=test
  echo
}

function check-bash301bug-array-element-length {
  echo "--- $FUNCNAME ---"
  # bash-3.1 で ${#arr[index]} を用いると、
  # 日本語の文字数が変になる。
  grc '\$\{#[[:alnum:]]+\[[^@*]' --exclude=test | grep -Ev '^([^#]*[[:space:]])?#'
  echo
}

function check-assign {
  echo "--- $FUNCNAME ---"
  local command="$1"
  local esc='(\[[ -?]*[@-~])*'
  local rex_grep_head="^$esc[[:graph:]]+$esc:$esc[[:digit:]]*$esc:$esc"
  grc --color --exclude=./test --exclude=./memo '\$\([^()]' |
    grep -Ev "$rex_grep_head#|[[:space:]]#"
}

# builtin return break continue : eval echo unset は unset しているので大丈夫のはず

#check-builtin 'history'
#check-builtin 'echo'
check-builtin '(bind|compopt|type|printf|read)'
#check-assign

check-bash300bug
check-bash301bug-array-element-length
